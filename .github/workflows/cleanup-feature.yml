name: Cleanup APEX Feature Branch

# This workflow runs ONLY when a branch matching 'feature/**' is DELETED
on:
  delete:
    branches:
      - 'wc-**'

jobs:
  cleanup-feature-app:
    runs-on: ubuntu-latest
    
    environment:
      name: development
      
    steps:
      # No need to check out code, we just need the branch name
      - name: Setup SQLcl
        run: |
          wget https://download.oracle.com/otn_software/java/sqldeveloper/sqlcl-latest.zip
          unzip -o sqlcl-latest.zip
          echo "$(pwd)/sqlcl/bin" >> $GITHUB_PATH

      - name: Find and Remove APEX Application
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          ENVIRONMENT: ${{ github.ref_name }}
          DB_URL: ${{ vars.DB_URL }}
          DB_USER: ${{ vars.DB_USER }}
          APP_ID: ${{ vars.APP_ID }}
          WKSPACE: ${{ vars.WKSPACE }}
          APP_EXPORT: ${{ vars.APP_EXPORT }}
        run: |
          # 1. Recreate the exact same alias that was used for deployment
          # github.ref contains the deleted branch name in a delete event
          BRANCH_SLUG=$(echo "${{ github.ref }}" | sed 's/\//-/g' | tr '[:lower:]' '[:upper:]')
          export APEX_APP_ALIAS="F${BRANCH_SLUG}"
          
          echo "Branch deleted: ${{ github.ref }}"
          echo "Looking for application with alias: $APEX_APP_ALIAS"

          # 2. Create a temporary SQL script to find and remove the application
          cat > remove_app.sql <<EOF
          DECLARE
              l_workspace_id NUMBER;
              l_application_id NUMBER;
          BEGIN
              l_workspace_id := apex_util.find_workspace('$WKSPACE'); -- IMPORTANT: Set your workspace name
              apex_util.set_security_group_id(p_security_group_id => l_workspace_id);

              -- Find the application ID using its alias
              SELECT application_id INTO l_application_id
              FROM apex_applications
              WHERE alias = '${APEX_APP_ALIAS}'
              AND workspace_id = l_workspace_id;

              IF l_application_id IS NOT NULL THEN
                  -- If found, remove the application
                  apex_instance_admin.remove_application(p_application_id => l_application_id);
                  COMMIT;
                  DBMS_OUTPUT.put_line('Successfully removed application ID ' || l_application_id || ' with alias ${APEX_APP_ALIAS}.');
              ELSE
                  DBMS_OUTPUT.put_line('No application found with alias ${APEX_APP_ALIAS}. Nothing to do.');
              END IF;
          EXCEPTION
              WHEN NO_DATA_FOUND THEN
                  DBMS_OUTPUT.put_line('No application found with alias ${APEX_APP_ALIAS}. Nothing to do.');
          END;
          /
          EOF
          
          # 3. Execute the cleanup script

          echo "${{ vars.ATP_WALLET_DEV }}" | base64 --decode > Wallet_DEVENV.zip
          sql  -cloudconfig  Wallet_DEVENV.zip $DB_USER/$DB_PASSWORD@$DB_URL @remove_app.sql


